#!/usr/bin/perl -i.bak -wnl
use strict; 
use warnings;
no warnings 'uninitialized';

our ($show); 

# get file names 
my ($csvfile, $headerfile) = @ARGV;
my @langs = ("english","french","german","italian","spanish");
my (%french, %german, %italian, %spanish); 

# open files 
open (my $fh_csv,'<', $csvfile) or die "Couldn't read '$csvfile': $!";
open(my $fh_header, "+<", $headerfile) or die "Couldn't read '$headerfile': $!";

while ( <$fh_csv> ) 
{ 
    # split $_ by commas 
    my @fields = split /,/; 
    
    # store each comma-separated string in correct language array
    if (($. != 1) and ($#fields+1 == 5)) 
    {
        $french{ $fields[0] } = $fields[1]; #french is second column
        $german{ $fields[0] } = $fields[2]; #german is third column
        $italian{ $fields[0] } = $fields[3]; #italian is fourth column
        $spanish{ $fields[0] } = "$fields[4]"; #spanish is fifth column
    }
}
close $fh_csv or die "couldn't close '$csvfile' : $!"; #close file 

print %spanish;

while ( <$fh_header> ) 
{
    # if within bounds of string array declaration, replace 
    if ( /^static const sp2_string_struct_t string_array\[NUM_STRINGS\] =/.../end string_array/ ) 
    {
        #get english translation hash key
        /$langs[0]/i and /"(.*?)"/i and my $key="$1";

        s/spanish/butsex/g; 
        # replace each language string with new hash value 
        #$french{$key} and (/$langs[1]/i and (s/"(.*?)"/$french{$key}/ge));
        #$german{$key} and (/$langs[2]/i and s/"(.*?)"/$german{$key}/ge);
        #$italian{$key} and (/$langs[3]/i and s/"(.*?)"/$italian{$key}/ge);

        #$french{$1} and print "\tFRA: $french{$key}" or print "\tFRA: --";
        #$german{$1} and print "\tDEU: $german{$key}" or print "\tDEU: --";
        #$italian{$1} and print "\tITA: $italian{$key}" or print "\tITA: --";
        #$spanish{$1} and print "\tESP: $spanish{$key}" or print "\tESP: --";
    }
}
close $fh_header, $headerfile or die "Couldn't close '$headerfile': $!";


